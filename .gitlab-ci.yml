stages:
  - build
  - push_pypi
  - deploy

build:
  stage: build
  tags:
    - docker
    - linux
  image: registry2.mobiledep.ru/scan_r12-hub.docker.com/library/rust:slim
  script:
    - apt-get update && apt-get install git -y
    - rm -rf ../LibAFL
    - git clone --branch develop https://$DEPLOY_USER:$DEPLOY_TOKEN@git.mobiledep.ru/iifuzzing/libafl ../LibAFL
    - ls -la
    - cargo build --release 
    - mkdir -p /artifacts && cp -r ./target/release/libnn_* ./target/release/nn_* /artifacts
  artifacts:
    paths:
      - /artifacts
    expire_in: 10 min
  only:
    - tags
    - develop
    - master

push_pypi:
  stage: push_pypi
  tags:
    - docker
    - linux
  image: registry2.mobiledep.ru/scan_r12-hub.docker.com/library/python:3.11-slim
  script:
    - pip install -i ${SWS_PYPI_INDEX} --trusted-host ${SWS_PYPI_HOST} -U pip
    - pip install -i ${SWS_PYPI_INDEX} --trusted-host ${SWS_PYPI_HOST} -U maturin
    - cd nn_connector
    - maturin publish --repository-url ${SWS_PYPI_HOSTED} -u ${SWS_PYPI_USER} -p ${SWS_PYPI_PASSW} --no-sdist --compatibility manylinux2014
    # - docker run --rm -v $(pwd):/io registry2.mobiledep.ru/scan_r12-ghcr.io/pyo3/maturin publish --repository-url ${SWS_PYPI_HOSTED} -u ${SWS_PYPI_USER} -p ${SWS_PYPI_PASSW} --manifest-path ./nn_connector/Cargo.toml --no-sdist
  only:
    - tags
    - develop
    - master
  needs:
    - build
    
deploy:
  stage: deploy
  tags:
    - docker
    - linux
  image: registry2.mobiledep.ru/scan_r12-hub.docker.com/library/alpine:latest
  before_script:
  - 'command -v ssh-agent >/dev/null || ( apk add --no-cache --update openssh )' 
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan $SERVER >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  script:
  - ssh $SERVER_USER@$SERVER_HOST "rm -rf /tmp/*"
  - scp -r /artifacts $SERVER_USER@$SERVER_HOST:/tmp/
  only:
  - develop
  needs:
  - push_pypi
  when: manual
